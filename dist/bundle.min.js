!function(t){var e={};function i(s){if(e[s])return e[s].exports;var o=e[s]={i:s,l:!1,exports:{}};return t[s].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)i.d(s,o,function(e){return t[e]}.bind(null,o));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){i(1),t.exports=i(2)},function(t,e,i){t.exports=i.p+"bundle.min.css"},function(t,e,i){"use strict";i.r(e);const s=document.querySelector("canvas");let o=s.getContext("2d");var n=class{constructor(t,e,i){this.displayGrid=!1,this.posX=t,this.posY=e,this.rad=i,this.dx=5,this.dy=5,this.color="rgb(102, 255, 51, 0.7)"}draw(){o.beginPath(),o.fillStyle=this.color,o.arc(this.posX,this.posY,this.rad,0,2*Math.PI),o.fill()}move(t){switch(t){case 1:this.posX+=this.dx,this.dy=0;break;case 2:this.posY+=this.dy,this.dx=0;break;default:this.posX+=this.dx,this.posY+=this.dy}}drawCollision(t){this.wallCollision(),this.charCollision(t),this.displayGrid&&this.collisionGrid(t)}wallCollision(){(this.posX>s.width||this.posX<0)&&(this.dx=-this.dx),(this.posY>s.height||this.posY<0)&&(this.dy=-this.dy)}charCollision(t){let e=t.posX+t.height/2,i=t.posY+t.height/2;this.getDistance(e,i,this.posX,this.posY)<this.rad+t.width/2&&(this.color="red",this.draw(),t.die())}getDistance(t,e,i,s){let o=i-t,n=s-e;return Math.sqrt(o**2+n**2)}collisionGrid(t){let e=t.posX+t.height/2,i=t.posY+t.height/2;o.beginPath(),o.strokeStyle="white",o.moveTo(this.posX,this.posY),o.lineTo(e,i),o.stroke()}};const r=document.querySelector("canvas");let a=r.getContext("2d"),d={posX:0,posY:0,dx:50,dy:50,width:50,height:50,alive:!0,move(t){switch(t){case"w":d.posY-=d.dy;break;case"s":d.posY+=d.dy;break;case"a":d.posX-=d.dx;break;case"d":d.posX+=d.dx}},draw(){a.beginPath(),a.fillStyle="black",a.fillRect(this.posX,this.posY,this.width,this.height)},die(){console.log("died"),this.alive=!1},drawCollision(){this.posX<=0&&(this.posX+=this.dx+5),this.posX>=r.width-this.width&&(this.posX-=this.dx+5),this.posY<=0&&(this.posY+=this.dy+5),this.posY>=r.height-this.height&&(this.posY-=this.dy+5)}};var h=d;const l=document.querySelector("canvas");var c={preventSpawnDistance:125,enemys:[],enemyRadBetween:[75,25],update(){this.updateEnemys(),this.updatePlayers()},updateEnemys(){this.enemys.forEach((t,e)=>{e%5==0?t.move():e%2==0?t.move(1):t.move(2),t.draw(),t.drawCollision(h)})},updatePlayers(){h.draw(),h.drawCollision()},spawnEnemy(){let t=Math.random()*l.width,e=Math.random()*l.height,i=Math.random()*(this.enemyRadBetween[0]-this.enemyRadBetween[1])+this.enemyRadBetween[1];if(this.getDistance(h.posX,h.posY,t,e)>this.preventSpawnDistance+h.width+i){let s=new n(t,e,i);this.enemys.push(s)}else this.spawnEnemy()},getDistance(t,e,i,s){let o=i-t,n=s-e;return Math.sqrt(o**2+n**2)},remake(){h.alive=!0,h.posX=0,h.posY=0,this.enemys=[]}};const p=document.querySelector("#button-display-grid-collision"),u=document.querySelector("h2");var y={userPoints:50,pointsReward:10,displayGrid:!1,log:{element:document.querySelector("#log"),scoreHistory:[]},update(){this.setGrid(this.displayGrid),u.innerHTML=this.userPoints},updateLog(){let t=this.log;t.scoreHistory.push(`<p> Score: ${this.userPoints} </p>`),t.element.innerHTML=t.scoreHistory.join(" ")},handleGrid(){this.displayGrid=!this.displayGrid,this.displayGrid?p.innerHTML="Turn Off":p.innerHTML="Display Grid"},setGrid(t){c.enemys.forEach(e=>{e.displayGrid=t})},remake(){this.updateLog(),this.userPoints=50,this.pointsReward=10}};const m=document.querySelector("canvas");let w=m.getContext("2d"),g={running:!1,start(){this.running?alert("Game is already running"):(y.remake(),c.remake(),c.spawnEnemy(),this.running=!0,this.startCoutingPoints(),this.animate())},startCoutingPoints(){window.pointTimer=setInterval(()=>{y.userPoints+=y.pointsReward,this.setDifficulty()},1e3)},animate(){g.running&&h.alive?(requestAnimationFrame(g.animate),w.clearRect(0,0,m.width,m.height),c.update(),y.update()):g.stop()},setDifficulty(){y.userPoints%100==0&&(c.spawnEnemy(),y.pointsReward+=10)},stop(){this.running=!1,window.clearInterval(window.pointTimer)}};var f=g;const v=document.querySelector("#button-start"),b=document.querySelector("#button-display-grid-collision"),x=document.querySelector("canvas");x.width=800,x.height=600,console.log(x),window.addEventListener("keydown",t=>{h.move(t.key),h.drawCollision()}),v.addEventListener("click",()=>{f.start()}),b.addEventListener("click",()=>{y.handleGrid()})}]);